[
  "=== Actions ===",
  "actions.Append(\">>> # Python REPL...\")",
  "actions.Wait()",
  "actions.Clear()",
  "actions.Append(\">>> None < \"3\"\nTr...\")",
  "=== Steps ===",
  "steps.InsertRow(\"[CodeLine(\">>> # Python REPL\")...]\" @ 0)",
  "steps.Clear()",
  "steps.InsertRow(\"[CodeLine(\">>> None < \"3\"\")...]\" @ 0)",
  "=== Forward ===",
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:1",
    "content": " 10 >>> # Python REPL"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:2",
    "content": " 11 >>> numbers = [6, 3, 9, 1]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:3",
    "content": " 12 >>> sorted(numbers)"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:4",
    "content": " 13 [1, 3, 6, 9]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:5",
    "content": " 14 >>> def foo(a, b):"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:6",
    "content": " 15 ...     pass"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:7",
    "content": " 16 ... "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:8",
    "content": " 17 >>> "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "clear",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:1",
    "content": " 10 >>> None < \"3\""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:2",
    "content": " 11 Traceback (most recent call last):"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:3",
    "content": " 12   File \"<stdin>\", line 1, in <module>"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:4",
    "content": " 13 TypeError: '<' not supported between instances of 'NoneType' and 'str'"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:5",
    "content": " 14 >>> for x in [1, 2, 3]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:6",
    "content": " 15   File \"<stdin>\", line 1"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:7",
    "content": " 16     for x in [1, 2, 3]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:8",
    "content": " 17                      ^"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:9",
    "content": " 18 SyntaxError: invalid syntax"
  },
  "=== Backward ===",
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:1",
    "content": " 10 >>> # Python REPL"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:2",
    "content": " 11 >>> numbers = [6, 3, 9, 1]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:3",
    "content": " 12 >>> sorted(numbers)"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:4",
    "content": " 13 [1, 3, 6, 9]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:5",
    "content": " 14 >>> def foo(a, b):"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:6",
    "content": " 15 ...     pass"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:7",
    "content": " 16 ... "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:8",
    "content": " 17 >>> "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "remove:1",
    "content": ""
  },
  "=== Forward ===",
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:1",
    "content": " 10 >>> # Python REPL"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:2",
    "content": " 11 >>> numbers = [6, 3, 9, 1]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:3",
    "content": " 12 >>> sorted(numbers)"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:4",
    "content": " 13 [1, 3, 6, 9]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:5",
    "content": " 14 >>> def foo(a, b):"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:6",
    "content": " 15 ...     pass"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:7",
    "content": " 16 ... "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:8",
    "content": " 17 >>> "
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "clear",
    "content": ""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:1",
    "content": " 10 >>> None < \"3\""
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:2",
    "content": " 11 Traceback (most recent call last):"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:3",
    "content": " 12   File \"<stdin>\", line 1, in <module>"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:4",
    "content": " 13 TypeError: '<' not supported between instances of 'NoneType' and 'str'"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:5",
    "content": " 14 >>> for x in [1, 2, 3]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:6",
    "content": " 15   File \"<stdin>\", line 1"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:7",
    "content": " 16     for x in [1, 2, 3]"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:8",
    "content": " 17                      ^"
  },
  {
    "code_box": "CodeBox(id=1)",
    "change_type": "insert:9",
    "content": " 18 SyntaxError: invalid syntax"
  }
]